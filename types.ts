/**
 * ================================
 * ๐๏ธ  Global Type Definitions
 * Imperium Gate AI โ Unified Types
 * ================================
 */

/**
 * ุงููุทูุฑ ุงูุนูุงุฑู ุงูุฑุฆูุณู (Emaar, Damac, Nakheel, Sobha)
 */
export interface Developer {
  /** ุงูุงุณู ุงูุฑุณูู ูููุทูุฑ */
  name: string;
  /** ุงููุนุฑู ุงููุตู (slug) โ ูุณุชุฎุฏู ูู ุงููุณุงุฑุงุช */
  slug: string;
  /** ุดุนุงุฑ ุงููุทูุฑ (ุฑุงุจุท ูุจุงุดุฑ) */
  logo?: string;
  /** ูุตู ุงููุทูุฑ */
  description?: string;
}

/**
 * ููุงุตูุงุช ุงููุดุฑูุน ุงูุนูุงุฑู
 */
export interface Project {
  /** ูุนุฑู ุงููุดุฑูุน ุงููุฑูุฏ (developer-slug + project-slug) */
  id: string;

  /** ุงููุทูุฑ */
  developer: string;

  /** ุงุณู ุงููุดุฑูุน */
  name: string;

  /** ุงููุนุฑู ุงููุตู ูููุณุงุฑ (slug) */
  slug: string;

  /** ูููุน ุงููุดุฑูุน (ุนุงุฏุฉ ุฏุจู) */
  location: string;

  /** ุงูุณุนุฑ ุงูุงุจุชุฏุงุฆู */
  priceFrom?: string;

  /** ุงูุตูุฑุฉ ุงูุฑุฆูุณูุฉ */
  image?: string;

  /** ูุนุฑุถ ุงูุตูุฑ */
  gallery?: string[];

  /** ููุฏูู ุชุฑููุฌู */
  video?: string;

  /** ุงููุตู ุงููุงูู */
  description?: string;

  /** ููุน ุงูุนูุงุฑ (ุดูุฉุ ูููุงุ ุชุงูููุงูุณ...) */
  propertyType?: string;

  /** ุญุงูุฉ ุงููุดุฑูุน (ููุฏ ุงูุฅูุดุงุกุ ุฌุงูุฒุ ูุฎุทุท...) */
  status?: string;

  /** ุชุงุฑูุฎ ุงูุชุณููู */
  completionDate?: string;

  /** ูุงุฆูุฉ ุงููููุฒุงุช ุฃู ุงูุฎุฏูุงุช */
  amenities?: string[];

  /** ุงูุฅุญุฏุงุซูุงุช ุงูุฌุบุฑุงููุฉ (Lat, Lng) */
  coords?: {
    lat: number;
    lng: number;
  };

  /** ุฑุงุจุท ูุชูุจ ุงููุดุฑูุน ุฃู ุงูุจุฑูุดูุฑ */
  brochure?: string;
}

/**
 * ุจูุงูุงุช ูุณุงุฆุท ุงูุนุฑุถ (ุตูุฑุ ููุฏูููุงุชุ ูููุงุช)
 */
export interface MediaItem {
  type: 'image' | 'video' | 'pdf' | 'link';
  url: string;
  caption?: string;
}

/**
 * ูุฎุฑุฌุงุช ูุงุฌูุฉ API ููุญุฏุฉ
 */
export interface APIResponse<T = any> {
  success: boolean;
  message?: string;
  data?: T;
  error?: string;
}

/**
 * ููุน ุฎุงุต ููุชุงุฆุฌ ุงูููุงุฑูุฉ ุจูู ุงููุดุงุฑูุน
 */
export interface ProjectComparison {
  projectA: Project;
  projectB: Project;
  differences: Record<string, string>;
}

/**
 * ุฅุนุฏุงุฏุงุช ุงูุชูููู ุงูุนุงูุฉ ููุชุทุจูู
 */
export interface AppConfig {
  siteName: string;
  baseUrl: string;
  apiBaseUrl: string;
  theme: 'light' | 'dark' | 'auto';
  defaultLanguage: string;
  supportedLanguages: string[];
}
